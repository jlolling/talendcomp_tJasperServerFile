<%@ jet
	imports="
		org.talend.core.model.process.INode
		org.talend.core.model.process.ElementParameterParser
		org.talend.designer.codegen.config.CodeGeneratorArgument
	"
%>

<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode) codeGenArgument.getArgument();
	String cid = node.getUniqueName();
    boolean useExistingClient = "true".equals(ElementParameterParser.getValue(node, "__USE_EXISTING_CLIENT__"));
    String component = ElementParameterParser.getValue(node, "__CLIENT_COMPONENT__");
	String serviceURL = ElementParameterParser.getValue(node, "__SERVICE_REPOSITORY_URL__");
	String serviceUser = ElementParameterParser.getValue(node, "__SERVICE_USER__");
	String servicePassword = ElementParameterParser.getValue(node, "__SERVICE_PASSWORD__");
	String timeout = ElementParameterParser.getValue(node, "__TIMEOUT__");
	if (timeout == null || timeout.trim().isEmpty()) {
		timeout = "null";
	}
%>
    de.jlo.talendcomp.jasperrepo.RepositoryClient <%=cid%> = new de.jlo.talendcomp.jasperrepo.RepositoryClient();
	globalMap.put("<%=cid%>", <%=cid%>);
    // configure the connection
<%  if (useExistingClient) { %>
	 <%=cid%>.init((de.jlo.talendcomp.jasperrepo.RepositoryClient) globalMap.get("<%=component%>"));
<%  } else { %>
    try {
      <%=cid%>.setTimeout(<%=timeout%>);
    	<%=cid%>.init(<%=serviceURL%>, <%=serviceUser%>, <%=servicePassword%>);
    } catch (Exception e) {
    	globalMap.put("<%=cid%>_ERROR_MESSAGE", e.getMessage());
    	throw e;
    }
<%  } %>
